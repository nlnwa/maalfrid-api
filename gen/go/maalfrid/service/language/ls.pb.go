// Code generated by protoc-gen-go. DO NOT EDIT.
// source: maalfrid/service/language/ls.proto

package language

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Language codes in ISO 639-3:2007 format
type LanguageCode int32

const (
	LanguageCode_UND LanguageCode = 0
	LanguageCode_NOB LanguageCode = 1
	LanguageCode_NNO LanguageCode = 2
	LanguageCode_DAN LanguageCode = 3
	LanguageCode_SWE LanguageCode = 4
	LanguageCode_ENG LanguageCode = 5
	LanguageCode_FRA LanguageCode = 6
	LanguageCode_SMA LanguageCode = 7
	LanguageCode_SMJ LanguageCode = 8
	LanguageCode_SME LanguageCode = 9
	LanguageCode_ABK LanguageCode = 10
	LanguageCode_AAR LanguageCode = 11
	LanguageCode_AFR LanguageCode = 12
	LanguageCode_AKA LanguageCode = 13
	LanguageCode_SQI LanguageCode = 14
	LanguageCode_AMH LanguageCode = 15
	LanguageCode_ARA LanguageCode = 16
	LanguageCode_ARG LanguageCode = 17
	LanguageCode_HYE LanguageCode = 18
	LanguageCode_ASM LanguageCode = 19
	LanguageCode_AVA LanguageCode = 20
	LanguageCode_AVE LanguageCode = 21
	LanguageCode_AYM LanguageCode = 22
	LanguageCode_AZE LanguageCode = 23
	LanguageCode_BAM LanguageCode = 24
	LanguageCode_BAK LanguageCode = 25
	LanguageCode_EUS LanguageCode = 26
	LanguageCode_BEL LanguageCode = 27
	LanguageCode_BEN LanguageCode = 28
	LanguageCode_BER LanguageCode = 29
	LanguageCode_BIS LanguageCode = 30
	LanguageCode_BOS LanguageCode = 31
	LanguageCode_BRE LanguageCode = 32
	LanguageCode_BUL LanguageCode = 33
	LanguageCode_MYA LanguageCode = 34
	LanguageCode_CAT LanguageCode = 35
	LanguageCode_CHA LanguageCode = 36
	LanguageCode_CHE LanguageCode = 37
	LanguageCode_NYA LanguageCode = 38
	LanguageCode_ZHO LanguageCode = 39
	LanguageCode_CHV LanguageCode = 40
	LanguageCode_COR LanguageCode = 41
	LanguageCode_COS LanguageCode = 42
	LanguageCode_CRE LanguageCode = 43
	LanguageCode_HRV LanguageCode = 44
	LanguageCode_CES LanguageCode = 45
	LanguageCode_PRS LanguageCode = 46
	LanguageCode_DIV LanguageCode = 47
	LanguageCode_NLD LanguageCode = 48
	LanguageCode_DZO LanguageCode = 49
	LanguageCode_EPO LanguageCode = 50
	LanguageCode_EST LanguageCode = 51
	LanguageCode_EWE LanguageCode = 52
	LanguageCode_FAO LanguageCode = 53
	LanguageCode_FIJ LanguageCode = 54
	LanguageCode_FIN LanguageCode = 55
	LanguageCode_FUL LanguageCode = 56
	LanguageCode_GLG LanguageCode = 57
	LanguageCode_KAT LanguageCode = 58
	LanguageCode_DEU LanguageCode = 59
	LanguageCode_ELL LanguageCode = 60
	LanguageCode_GRN LanguageCode = 61
	LanguageCode_GUJ LanguageCode = 62
	LanguageCode_HAT LanguageCode = 63
	LanguageCode_HAU LanguageCode = 64
	LanguageCode_HEB LanguageCode = 65
	LanguageCode_HER LanguageCode = 66
	LanguageCode_HIN LanguageCode = 67
	LanguageCode_HMO LanguageCode = 68
	LanguageCode_HUN LanguageCode = 69
	LanguageCode_INA LanguageCode = 70
	LanguageCode_IND LanguageCode = 71
	LanguageCode_ILE LanguageCode = 72
	LanguageCode_GLE LanguageCode = 73
	LanguageCode_IBO LanguageCode = 74
	LanguageCode_IPK LanguageCode = 75
	LanguageCode_IDO LanguageCode = 76
	LanguageCode_ISL LanguageCode = 77
	LanguageCode_ITA LanguageCode = 78
	LanguageCode_IKU LanguageCode = 79
	LanguageCode_JPN LanguageCode = 80
	LanguageCode_JAV LanguageCode = 81
	LanguageCode_KAL LanguageCode = 82
	LanguageCode_KAN LanguageCode = 83
	LanguageCode_KAU LanguageCode = 84
	LanguageCode_KAS LanguageCode = 85
	LanguageCode_KAZ LanguageCode = 86
	LanguageCode_KHM LanguageCode = 87
	LanguageCode_KIK LanguageCode = 88
	LanguageCode_KIN LanguageCode = 89
	LanguageCode_KIR LanguageCode = 90
	LanguageCode_KOM LanguageCode = 91
	LanguageCode_KON LanguageCode = 92
	LanguageCode_KOR LanguageCode = 93
	LanguageCode_KUR LanguageCode = 94
	LanguageCode_KUA LanguageCode = 95
	LanguageCode_LAT LanguageCode = 96
	LanguageCode_LTZ LanguageCode = 97
	LanguageCode_LUG LanguageCode = 98
	LanguageCode_LIM LanguageCode = 99
	LanguageCode_LIN LanguageCode = 100
	LanguageCode_LAO LanguageCode = 101
	LanguageCode_LIT LanguageCode = 102
	LanguageCode_LUB LanguageCode = 103
	LanguageCode_LAV LanguageCode = 104
	LanguageCode_GLV LanguageCode = 105
	LanguageCode_MKD LanguageCode = 106
	LanguageCode_MLG LanguageCode = 107
	LanguageCode_MSA LanguageCode = 108
	LanguageCode_MAL LanguageCode = 109
	LanguageCode_MLT LanguageCode = 110
	LanguageCode_MRI LanguageCode = 111
	LanguageCode_MAR LanguageCode = 112
	LanguageCode_MAH LanguageCode = 113
	LanguageCode_MON LanguageCode = 114
	LanguageCode_NAU LanguageCode = 115
	LanguageCode_NAV LanguageCode = 116
	LanguageCode_NDE LanguageCode = 117
	LanguageCode_NSO LanguageCode = 118
	LanguageCode_NEP LanguageCode = 119
	LanguageCode_NDO LanguageCode = 120
	LanguageCode_NOR LanguageCode = 121
	LanguageCode_III LanguageCode = 122
	LanguageCode_NBL LanguageCode = 123
	LanguageCode_OCI LanguageCode = 124
	LanguageCode_OJI LanguageCode = 125
	LanguageCode_CHU LanguageCode = 126
	LanguageCode_ORM LanguageCode = 127
	LanguageCode_ORI LanguageCode = 128
	LanguageCode_OSS LanguageCode = 129
	LanguageCode_PAN LanguageCode = 130
	LanguageCode_PLI LanguageCode = 131
	LanguageCode_FAS LanguageCode = 132
	LanguageCode_POL LanguageCode = 133
	LanguageCode_PUS LanguageCode = 134
	LanguageCode_POR LanguageCode = 135
	LanguageCode_QUE LanguageCode = 136
	LanguageCode_ROH LanguageCode = 137
	LanguageCode_RUN LanguageCode = 138
	LanguageCode_RON LanguageCode = 139
	LanguageCode_RUS LanguageCode = 140
	LanguageCode_SAN LanguageCode = 141
	LanguageCode_SRD LanguageCode = 142
	LanguageCode_SND LanguageCode = 143
	LanguageCode_SMO LanguageCode = 144
	LanguageCode_SAG LanguageCode = 145
	LanguageCode_SRP LanguageCode = 146
	LanguageCode_GLA LanguageCode = 147
	LanguageCode_SNA LanguageCode = 148
	LanguageCode_SIN LanguageCode = 149
	LanguageCode_SLK LanguageCode = 150
	LanguageCode_SLV LanguageCode = 151
	LanguageCode_SOM LanguageCode = 152
	LanguageCode_SOT LanguageCode = 153
	LanguageCode_SPA LanguageCode = 154
	LanguageCode_SUN LanguageCode = 155
	LanguageCode_SWA LanguageCode = 156
	LanguageCode_SSW LanguageCode = 157
	LanguageCode_TAM LanguageCode = 158
	LanguageCode_TEL LanguageCode = 159
	LanguageCode_TGK LanguageCode = 160
	LanguageCode_THA LanguageCode = 161
	LanguageCode_TIR LanguageCode = 162
	LanguageCode_BOD LanguageCode = 163
	LanguageCode_TUK LanguageCode = 164
	LanguageCode_TGL LanguageCode = 165
	LanguageCode_FIL LanguageCode = 166
	LanguageCode_TSN LanguageCode = 167
	LanguageCode_TON LanguageCode = 168
	LanguageCode_TUR LanguageCode = 169
	LanguageCode_TSO LanguageCode = 170
	LanguageCode_TAT LanguageCode = 171
	LanguageCode_TWI LanguageCode = 172
	LanguageCode_TAH LanguageCode = 173
	LanguageCode_UIG LanguageCode = 174
	LanguageCode_UKR LanguageCode = 175
	LanguageCode_URD LanguageCode = 176
	LanguageCode_UZB LanguageCode = 177
	LanguageCode_VEN LanguageCode = 178
	LanguageCode_VIE LanguageCode = 179
	LanguageCode_VOL LanguageCode = 180
	LanguageCode_WLN LanguageCode = 181
	LanguageCode_CYM LanguageCode = 182
	LanguageCode_WOL LanguageCode = 183
	LanguageCode_FRY LanguageCode = 184
	LanguageCode_XHO LanguageCode = 185
	LanguageCode_YID LanguageCode = 186
	LanguageCode_YOR LanguageCode = 187
	LanguageCode_ZHA LanguageCode = 188
	LanguageCode_ZUL LanguageCode = 189
	LanguageCode_ACE LanguageCode = 190
	LanguageCode_ACH LanguageCode = 191
	LanguageCode_ADA LanguageCode = 192
	LanguageCode_ADY LanguageCode = 193
	LanguageCode_AFA LanguageCode = 194
	LanguageCode_AFH LanguageCode = 195
	LanguageCode_AIN LanguageCode = 196
	LanguageCode_AKK LanguageCode = 197
	LanguageCode_ALE LanguageCode = 198
	LanguageCode_ALG LanguageCode = 199
	LanguageCode_ALT LanguageCode = 200
	LanguageCode_ANG LanguageCode = 201
	LanguageCode_ANP LanguageCode = 202
	LanguageCode_APA LanguageCode = 203
	LanguageCode_ARC LanguageCode = 204
	LanguageCode_ARN LanguageCode = 205
	LanguageCode_ARP LanguageCode = 206
	LanguageCode_ART LanguageCode = 207
	LanguageCode_ARW LanguageCode = 208
	LanguageCode_AST LanguageCode = 209
	LanguageCode_ATH LanguageCode = 210
	LanguageCode_AUS LanguageCode = 211
	LanguageCode_AWA LanguageCode = 212
	LanguageCode_BAD LanguageCode = 213
	LanguageCode_BAI LanguageCode = 214
	LanguageCode_BAL LanguageCode = 215
	LanguageCode_BAN LanguageCode = 216
	LanguageCode_BAS LanguageCode = 217
	LanguageCode_BAT LanguageCode = 218
	LanguageCode_BEJ LanguageCode = 219
	LanguageCode_BEM LanguageCode = 220
	LanguageCode_BHO LanguageCode = 221
	LanguageCode_BIK LanguageCode = 222
	LanguageCode_BIN LanguageCode = 223
	LanguageCode_BLA LanguageCode = 224
	LanguageCode_BNT LanguageCode = 225
	LanguageCode_BRA LanguageCode = 226
	LanguageCode_BTK LanguageCode = 227
	LanguageCode_BUA LanguageCode = 228
	LanguageCode_BUG LanguageCode = 229
	LanguageCode_BYN LanguageCode = 230
	LanguageCode_CAD LanguageCode = 231
	LanguageCode_CAI LanguageCode = 232
	LanguageCode_CAR LanguageCode = 233
	LanguageCode_CAU LanguageCode = 234
	LanguageCode_CEB LanguageCode = 235
	LanguageCode_CEL LanguageCode = 236
	LanguageCode_CHB LanguageCode = 237
	LanguageCode_CHG LanguageCode = 238
	LanguageCode_CHK LanguageCode = 239
	LanguageCode_CHM LanguageCode = 240
	LanguageCode_CHN LanguageCode = 241
	LanguageCode_CHO LanguageCode = 242
	LanguageCode_CHP LanguageCode = 243
	LanguageCode_CHR LanguageCode = 244
	LanguageCode_CHY LanguageCode = 245
	LanguageCode_CMC LanguageCode = 246
	LanguageCode_COP LanguageCode = 247
	LanguageCode_CPE LanguageCode = 248
	LanguageCode_CPF LanguageCode = 249
	LanguageCode_CPP LanguageCode = 250
	LanguageCode_CRH LanguageCode = 251
	LanguageCode_CRP LanguageCode = 252
	LanguageCode_CSB LanguageCode = 253
	LanguageCode_CUS LanguageCode = 254
	LanguageCode_DAK LanguageCode = 255
	LanguageCode_DAR LanguageCode = 256
	LanguageCode_DAY LanguageCode = 257
	LanguageCode_DEL LanguageCode = 258
	LanguageCode_DEN LanguageCode = 259
	LanguageCode_DGR LanguageCode = 260
	LanguageCode_DIN LanguageCode = 261
	LanguageCode_DOI LanguageCode = 262
	LanguageCode_DRA LanguageCode = 263
	LanguageCode_DSB LanguageCode = 264
	LanguageCode_DUA LanguageCode = 265
	LanguageCode_DUM LanguageCode = 266
	LanguageCode_DYU LanguageCode = 267
	LanguageCode_EFI LanguageCode = 268
	LanguageCode_EGY LanguageCode = 269
	LanguageCode_EKA LanguageCode = 270
	LanguageCode_ELX LanguageCode = 271
	LanguageCode_ENM LanguageCode = 272
	LanguageCode_EWO LanguageCode = 273
	LanguageCode_FAN LanguageCode = 274
	LanguageCode_FAT LanguageCode = 275
	LanguageCode_FIU LanguageCode = 276
	LanguageCode_FON LanguageCode = 277
	LanguageCode_FRM LanguageCode = 278
	LanguageCode_FRO LanguageCode = 279
	LanguageCode_FRR LanguageCode = 280
	LanguageCode_FRS LanguageCode = 281
	LanguageCode_FUR LanguageCode = 282
	LanguageCode_GAA LanguageCode = 283
	LanguageCode_GAY LanguageCode = 284
	LanguageCode_GBA LanguageCode = 285
	LanguageCode_GEM LanguageCode = 286
	LanguageCode_GEZ LanguageCode = 287
	LanguageCode_GIL LanguageCode = 288
	LanguageCode_GMH LanguageCode = 289
	LanguageCode_GOH LanguageCode = 290
	LanguageCode_GON LanguageCode = 291
	LanguageCode_GOR LanguageCode = 292
	LanguageCode_GOT LanguageCode = 293
	LanguageCode_GRB LanguageCode = 294
	LanguageCode_GRC LanguageCode = 295
	LanguageCode_GSW LanguageCode = 296
	LanguageCode_GWI LanguageCode = 297
	LanguageCode_HAI LanguageCode = 298
	LanguageCode_HAW LanguageCode = 299
	LanguageCode_HIL LanguageCode = 300
	LanguageCode_HIM LanguageCode = 301
	LanguageCode_HIT LanguageCode = 302
	LanguageCode_HMN LanguageCode = 303
	LanguageCode_HSB LanguageCode = 304
	LanguageCode_HUP LanguageCode = 305
	LanguageCode_IBA LanguageCode = 306
	LanguageCode_IJO LanguageCode = 307
	LanguageCode_ILO LanguageCode = 308
	LanguageCode_INC LanguageCode = 309
	LanguageCode_INE LanguageCode = 310
	LanguageCode_INH LanguageCode = 311
	LanguageCode_IRA LanguageCode = 312
	LanguageCode_IRO LanguageCode = 313
	LanguageCode_JBO LanguageCode = 314
	LanguageCode_JPR LanguageCode = 315
	LanguageCode_JRB LanguageCode = 316
	LanguageCode_KAA LanguageCode = 317
	LanguageCode_KAB LanguageCode = 318
	LanguageCode_KAC LanguageCode = 319
	LanguageCode_KAM LanguageCode = 320
	LanguageCode_KAR LanguageCode = 321
	LanguageCode_KAW LanguageCode = 322
	LanguageCode_KBD LanguageCode = 323
	LanguageCode_KHA LanguageCode = 324
	LanguageCode_KHI LanguageCode = 325
	LanguageCode_KHO LanguageCode = 326
	LanguageCode_KMB LanguageCode = 327
	LanguageCode_KOK LanguageCode = 328
	LanguageCode_KOS LanguageCode = 329
	LanguageCode_KPE LanguageCode = 330
	LanguageCode_KRC LanguageCode = 331
	LanguageCode_KRL LanguageCode = 332
	LanguageCode_KRO LanguageCode = 333
	LanguageCode_KRU LanguageCode = 334
	LanguageCode_KUM LanguageCode = 335
	LanguageCode_KUT LanguageCode = 336
	LanguageCode_LAD LanguageCode = 337
	LanguageCode_LAH LanguageCode = 338
	LanguageCode_LAM LanguageCode = 339
	LanguageCode_LEZ LanguageCode = 340
	LanguageCode_LOL LanguageCode = 341
	LanguageCode_LOZ LanguageCode = 342
	LanguageCode_LUA LanguageCode = 343
	LanguageCode_LUI LanguageCode = 344
	LanguageCode_LUN LanguageCode = 345
	LanguageCode_LUO LanguageCode = 346
	LanguageCode_LUS LanguageCode = 347
	LanguageCode_MAD LanguageCode = 348
	LanguageCode_MAG LanguageCode = 349
	LanguageCode_MAI LanguageCode = 350
	LanguageCode_MAK LanguageCode = 351
	LanguageCode_MAN LanguageCode = 352
	LanguageCode_MAP LanguageCode = 353
	LanguageCode_MAS LanguageCode = 354
	LanguageCode_MDF LanguageCode = 355
	LanguageCode_MDR LanguageCode = 356
	LanguageCode_MEN LanguageCode = 357
	LanguageCode_MGA LanguageCode = 358
	LanguageCode_MIC LanguageCode = 359
	LanguageCode_MIN LanguageCode = 360
	LanguageCode_MIS LanguageCode = 361
	LanguageCode_MKH LanguageCode = 362
	LanguageCode_MNC LanguageCode = 363
	LanguageCode_MNI LanguageCode = 364
	LanguageCode_MNO LanguageCode = 365
	LanguageCode_MOH LanguageCode = 366
	LanguageCode_MOS LanguageCode = 367
	LanguageCode_MUL LanguageCode = 368
	LanguageCode_MUN LanguageCode = 369
	LanguageCode_MUS LanguageCode = 370
	LanguageCode_MWL LanguageCode = 371
	LanguageCode_MWR LanguageCode = 372
	LanguageCode_MYN LanguageCode = 373
	LanguageCode_MYV LanguageCode = 374
	LanguageCode_NAH LanguageCode = 375
	LanguageCode_NAI LanguageCode = 376
	LanguageCode_NAP LanguageCode = 377
	LanguageCode_NDS LanguageCode = 378
	LanguageCode_NEW LanguageCode = 379
	LanguageCode_NIA LanguageCode = 380
	LanguageCode_NIC LanguageCode = 381
	LanguageCode_NIU LanguageCode = 382
	LanguageCode_NOG LanguageCode = 383
	LanguageCode_NON LanguageCode = 384
	LanguageCode_NQO LanguageCode = 385
	LanguageCode_NUB LanguageCode = 386
	LanguageCode_NWC LanguageCode = 387
	LanguageCode_NYM LanguageCode = 388
	LanguageCode_NYN LanguageCode = 389
	LanguageCode_NYO LanguageCode = 390
	LanguageCode_NZI LanguageCode = 391
	LanguageCode_OSA LanguageCode = 392
	LanguageCode_OTA LanguageCode = 393
	LanguageCode_OTO LanguageCode = 394
	LanguageCode_PAA LanguageCode = 395
	LanguageCode_PAG LanguageCode = 396
	LanguageCode_PAL LanguageCode = 397
	LanguageCode_PAM LanguageCode = 398
	LanguageCode_PAP LanguageCode = 399
	LanguageCode_PAU LanguageCode = 400
	LanguageCode_PEO LanguageCode = 401
	LanguageCode_PHI LanguageCode = 402
	LanguageCode_PHN LanguageCode = 403
	LanguageCode_PON LanguageCode = 404
	LanguageCode_PRA LanguageCode = 405
	LanguageCode_PRO LanguageCode = 406
	LanguageCode_RAJ LanguageCode = 407
	LanguageCode_RAP LanguageCode = 408
	LanguageCode_RAR LanguageCode = 409
	LanguageCode_ROA LanguageCode = 410
	LanguageCode_ROM LanguageCode = 411
	LanguageCode_RUP LanguageCode = 412
	LanguageCode_SAD LanguageCode = 413
	LanguageCode_SAH LanguageCode = 414
	LanguageCode_SAI LanguageCode = 415
	LanguageCode_SAL LanguageCode = 416
	LanguageCode_SAM LanguageCode = 417
	LanguageCode_SAS LanguageCode = 418
	LanguageCode_SAT LanguageCode = 419
	LanguageCode_SCN LanguageCode = 420
	LanguageCode_SCO LanguageCode = 421
	LanguageCode_SEL LanguageCode = 422
	LanguageCode_SEM LanguageCode = 423
	LanguageCode_SGA LanguageCode = 424
	LanguageCode_SGN LanguageCode = 425
	LanguageCode_SHN LanguageCode = 426
	LanguageCode_SID LanguageCode = 427
	LanguageCode_SIO LanguageCode = 428
	LanguageCode_SIT LanguageCode = 429
	LanguageCode_SLA LanguageCode = 430
	LanguageCode_SMI LanguageCode = 431
	LanguageCode_SMN LanguageCode = 432
	LanguageCode_SMS LanguageCode = 433
	LanguageCode_SNK LanguageCode = 434
	LanguageCode_SOG LanguageCode = 435
	LanguageCode_SON LanguageCode = 436
	LanguageCode_SRN LanguageCode = 437
	LanguageCode_SRR LanguageCode = 438
	LanguageCode_SSA LanguageCode = 439
	LanguageCode_SUK LanguageCode = 440
	LanguageCode_SUS LanguageCode = 441
	LanguageCode_SUX LanguageCode = 442
	LanguageCode_SYC LanguageCode = 443
	LanguageCode_SYR LanguageCode = 444
	LanguageCode_TAI LanguageCode = 445
	LanguageCode_TEM LanguageCode = 446
	LanguageCode_TER LanguageCode = 447
	LanguageCode_TET LanguageCode = 448
	LanguageCode_TIG LanguageCode = 449
	LanguageCode_TIV LanguageCode = 450
	LanguageCode_TKL LanguageCode = 451
	LanguageCode_TLH LanguageCode = 452
	LanguageCode_TLI LanguageCode = 453
	LanguageCode_TMH LanguageCode = 454
	LanguageCode_TOG LanguageCode = 455
	LanguageCode_TPI LanguageCode = 456
	LanguageCode_TSI LanguageCode = 457
	LanguageCode_TUM LanguageCode = 458
	LanguageCode_TUP LanguageCode = 459
	LanguageCode_TUT LanguageCode = 460
	LanguageCode_TVL LanguageCode = 461
	LanguageCode_TYV LanguageCode = 462
	LanguageCode_UDM LanguageCode = 463
	LanguageCode_UGA LanguageCode = 464
	LanguageCode_UMB LanguageCode = 465
	LanguageCode_VAI LanguageCode = 466
	LanguageCode_VOT LanguageCode = 467
	LanguageCode_WAK LanguageCode = 468
	LanguageCode_WAL LanguageCode = 469
	LanguageCode_WAR LanguageCode = 470
	LanguageCode_WAS LanguageCode = 471
	LanguageCode_WEN LanguageCode = 472
	LanguageCode_XAL LanguageCode = 473
	LanguageCode_YAO LanguageCode = 474
	LanguageCode_YAP LanguageCode = 475
	LanguageCode_YPK LanguageCode = 476
	LanguageCode_ZAP LanguageCode = 477
	LanguageCode_ZBL LanguageCode = 478
	LanguageCode_ZEN LanguageCode = 479
	LanguageCode_ZGH LanguageCode = 480
	LanguageCode_ZND LanguageCode = 481
	LanguageCode_ZUN LanguageCode = 482
	LanguageCode_ZXX LanguageCode = 483
	LanguageCode_ZZA LanguageCode = 484
)

var LanguageCode_name = map[int32]string{
	0:   "UND",
	1:   "NOB",
	2:   "NNO",
	3:   "DAN",
	4:   "SWE",
	5:   "ENG",
	6:   "FRA",
	7:   "SMA",
	8:   "SMJ",
	9:   "SME",
	10:  "ABK",
	11:  "AAR",
	12:  "AFR",
	13:  "AKA",
	14:  "SQI",
	15:  "AMH",
	16:  "ARA",
	17:  "ARG",
	18:  "HYE",
	19:  "ASM",
	20:  "AVA",
	21:  "AVE",
	22:  "AYM",
	23:  "AZE",
	24:  "BAM",
	25:  "BAK",
	26:  "EUS",
	27:  "BEL",
	28:  "BEN",
	29:  "BER",
	30:  "BIS",
	31:  "BOS",
	32:  "BRE",
	33:  "BUL",
	34:  "MYA",
	35:  "CAT",
	36:  "CHA",
	37:  "CHE",
	38:  "NYA",
	39:  "ZHO",
	40:  "CHV",
	41:  "COR",
	42:  "COS",
	43:  "CRE",
	44:  "HRV",
	45:  "CES",
	46:  "PRS",
	47:  "DIV",
	48:  "NLD",
	49:  "DZO",
	50:  "EPO",
	51:  "EST",
	52:  "EWE",
	53:  "FAO",
	54:  "FIJ",
	55:  "FIN",
	56:  "FUL",
	57:  "GLG",
	58:  "KAT",
	59:  "DEU",
	60:  "ELL",
	61:  "GRN",
	62:  "GUJ",
	63:  "HAT",
	64:  "HAU",
	65:  "HEB",
	66:  "HER",
	67:  "HIN",
	68:  "HMO",
	69:  "HUN",
	70:  "INA",
	71:  "IND",
	72:  "ILE",
	73:  "GLE",
	74:  "IBO",
	75:  "IPK",
	76:  "IDO",
	77:  "ISL",
	78:  "ITA",
	79:  "IKU",
	80:  "JPN",
	81:  "JAV",
	82:  "KAL",
	83:  "KAN",
	84:  "KAU",
	85:  "KAS",
	86:  "KAZ",
	87:  "KHM",
	88:  "KIK",
	89:  "KIN",
	90:  "KIR",
	91:  "KOM",
	92:  "KON",
	93:  "KOR",
	94:  "KUR",
	95:  "KUA",
	96:  "LAT",
	97:  "LTZ",
	98:  "LUG",
	99:  "LIM",
	100: "LIN",
	101: "LAO",
	102: "LIT",
	103: "LUB",
	104: "LAV",
	105: "GLV",
	106: "MKD",
	107: "MLG",
	108: "MSA",
	109: "MAL",
	110: "MLT",
	111: "MRI",
	112: "MAR",
	113: "MAH",
	114: "MON",
	115: "NAU",
	116: "NAV",
	117: "NDE",
	118: "NSO",
	119: "NEP",
	120: "NDO",
	121: "NOR",
	122: "III",
	123: "NBL",
	124: "OCI",
	125: "OJI",
	126: "CHU",
	127: "ORM",
	128: "ORI",
	129: "OSS",
	130: "PAN",
	131: "PLI",
	132: "FAS",
	133: "POL",
	134: "PUS",
	135: "POR",
	136: "QUE",
	137: "ROH",
	138: "RUN",
	139: "RON",
	140: "RUS",
	141: "SAN",
	142: "SRD",
	143: "SND",
	144: "SMO",
	145: "SAG",
	146: "SRP",
	147: "GLA",
	148: "SNA",
	149: "SIN",
	150: "SLK",
	151: "SLV",
	152: "SOM",
	153: "SOT",
	154: "SPA",
	155: "SUN",
	156: "SWA",
	157: "SSW",
	158: "TAM",
	159: "TEL",
	160: "TGK",
	161: "THA",
	162: "TIR",
	163: "BOD",
	164: "TUK",
	165: "TGL",
	166: "FIL",
	167: "TSN",
	168: "TON",
	169: "TUR",
	170: "TSO",
	171: "TAT",
	172: "TWI",
	173: "TAH",
	174: "UIG",
	175: "UKR",
	176: "URD",
	177: "UZB",
	178: "VEN",
	179: "VIE",
	180: "VOL",
	181: "WLN",
	182: "CYM",
	183: "WOL",
	184: "FRY",
	185: "XHO",
	186: "YID",
	187: "YOR",
	188: "ZHA",
	189: "ZUL",
	190: "ACE",
	191: "ACH",
	192: "ADA",
	193: "ADY",
	194: "AFA",
	195: "AFH",
	196: "AIN",
	197: "AKK",
	198: "ALE",
	199: "ALG",
	200: "ALT",
	201: "ANG",
	202: "ANP",
	203: "APA",
	204: "ARC",
	205: "ARN",
	206: "ARP",
	207: "ART",
	208: "ARW",
	209: "AST",
	210: "ATH",
	211: "AUS",
	212: "AWA",
	213: "BAD",
	214: "BAI",
	215: "BAL",
	216: "BAN",
	217: "BAS",
	218: "BAT",
	219: "BEJ",
	220: "BEM",
	221: "BHO",
	222: "BIK",
	223: "BIN",
	224: "BLA",
	225: "BNT",
	226: "BRA",
	227: "BTK",
	228: "BUA",
	229: "BUG",
	230: "BYN",
	231: "CAD",
	232: "CAI",
	233: "CAR",
	234: "CAU",
	235: "CEB",
	236: "CEL",
	237: "CHB",
	238: "CHG",
	239: "CHK",
	240: "CHM",
	241: "CHN",
	242: "CHO",
	243: "CHP",
	244: "CHR",
	245: "CHY",
	246: "CMC",
	247: "COP",
	248: "CPE",
	249: "CPF",
	250: "CPP",
	251: "CRH",
	252: "CRP",
	253: "CSB",
	254: "CUS",
	255: "DAK",
	256: "DAR",
	257: "DAY",
	258: "DEL",
	259: "DEN",
	260: "DGR",
	261: "DIN",
	262: "DOI",
	263: "DRA",
	264: "DSB",
	265: "DUA",
	266: "DUM",
	267: "DYU",
	268: "EFI",
	269: "EGY",
	270: "EKA",
	271: "ELX",
	272: "ENM",
	273: "EWO",
	274: "FAN",
	275: "FAT",
	276: "FIU",
	277: "FON",
	278: "FRM",
	279: "FRO",
	280: "FRR",
	281: "FRS",
	282: "FUR",
	283: "GAA",
	284: "GAY",
	285: "GBA",
	286: "GEM",
	287: "GEZ",
	288: "GIL",
	289: "GMH",
	290: "GOH",
	291: "GON",
	292: "GOR",
	293: "GOT",
	294: "GRB",
	295: "GRC",
	296: "GSW",
	297: "GWI",
	298: "HAI",
	299: "HAW",
	300: "HIL",
	301: "HIM",
	302: "HIT",
	303: "HMN",
	304: "HSB",
	305: "HUP",
	306: "IBA",
	307: "IJO",
	308: "ILO",
	309: "INC",
	310: "INE",
	311: "INH",
	312: "IRA",
	313: "IRO",
	314: "JBO",
	315: "JPR",
	316: "JRB",
	317: "KAA",
	318: "KAB",
	319: "KAC",
	320: "KAM",
	321: "KAR",
	322: "KAW",
	323: "KBD",
	324: "KHA",
	325: "KHI",
	326: "KHO",
	327: "KMB",
	328: "KOK",
	329: "KOS",
	330: "KPE",
	331: "KRC",
	332: "KRL",
	333: "KRO",
	334: "KRU",
	335: "KUM",
	336: "KUT",
	337: "LAD",
	338: "LAH",
	339: "LAM",
	340: "LEZ",
	341: "LOL",
	342: "LOZ",
	343: "LUA",
	344: "LUI",
	345: "LUN",
	346: "LUO",
	347: "LUS",
	348: "MAD",
	349: "MAG",
	350: "MAI",
	351: "MAK",
	352: "MAN",
	353: "MAP",
	354: "MAS",
	355: "MDF",
	356: "MDR",
	357: "MEN",
	358: "MGA",
	359: "MIC",
	360: "MIN",
	361: "MIS",
	362: "MKH",
	363: "MNC",
	364: "MNI",
	365: "MNO",
	366: "MOH",
	367: "MOS",
	368: "MUL",
	369: "MUN",
	370: "MUS",
	371: "MWL",
	372: "MWR",
	373: "MYN",
	374: "MYV",
	375: "NAH",
	376: "NAI",
	377: "NAP",
	378: "NDS",
	379: "NEW",
	380: "NIA",
	381: "NIC",
	382: "NIU",
	383: "NOG",
	384: "NON",
	385: "NQO",
	386: "NUB",
	387: "NWC",
	388: "NYM",
	389: "NYN",
	390: "NYO",
	391: "NZI",
	392: "OSA",
	393: "OTA",
	394: "OTO",
	395: "PAA",
	396: "PAG",
	397: "PAL",
	398: "PAM",
	399: "PAP",
	400: "PAU",
	401: "PEO",
	402: "PHI",
	403: "PHN",
	404: "PON",
	405: "PRA",
	406: "PRO",
	407: "RAJ",
	408: "RAP",
	409: "RAR",
	410: "ROA",
	411: "ROM",
	412: "RUP",
	413: "SAD",
	414: "SAH",
	415: "SAI",
	416: "SAL",
	417: "SAM",
	418: "SAS",
	419: "SAT",
	420: "SCN",
	421: "SCO",
	422: "SEL",
	423: "SEM",
	424: "SGA",
	425: "SGN",
	426: "SHN",
	427: "SID",
	428: "SIO",
	429: "SIT",
	430: "SLA",
	431: "SMI",
	432: "SMN",
	433: "SMS",
	434: "SNK",
	435: "SOG",
	436: "SON",
	437: "SRN",
	438: "SRR",
	439: "SSA",
	440: "SUK",
	441: "SUS",
	442: "SUX",
	443: "SYC",
	444: "SYR",
	445: "TAI",
	446: "TEM",
	447: "TER",
	448: "TET",
	449: "TIG",
	450: "TIV",
	451: "TKL",
	452: "TLH",
	453: "TLI",
	454: "TMH",
	455: "TOG",
	456: "TPI",
	457: "TSI",
	458: "TUM",
	459: "TUP",
	460: "TUT",
	461: "TVL",
	462: "TYV",
	463: "UDM",
	464: "UGA",
	465: "UMB",
	466: "VAI",
	467: "VOT",
	468: "WAK",
	469: "WAL",
	470: "WAR",
	471: "WAS",
	472: "WEN",
	473: "XAL",
	474: "YAO",
	475: "YAP",
	476: "YPK",
	477: "ZAP",
	478: "ZBL",
	479: "ZEN",
	480: "ZGH",
	481: "ZND",
	482: "ZUN",
	483: "ZXX",
	484: "ZZA",
}
var LanguageCode_value = map[string]int32{
	"UND": 0,
	"NOB": 1,
	"NNO": 2,
	"DAN": 3,
	"SWE": 4,
	"ENG": 5,
	"FRA": 6,
	"SMA": 7,
	"SMJ": 8,
	"SME": 9,
	"ABK": 10,
	"AAR": 11,
	"AFR": 12,
	"AKA": 13,
	"SQI": 14,
	"AMH": 15,
	"ARA": 16,
	"ARG": 17,
	"HYE": 18,
	"ASM": 19,
	"AVA": 20,
	"AVE": 21,
	"AYM": 22,
	"AZE": 23,
	"BAM": 24,
	"BAK": 25,
	"EUS": 26,
	"BEL": 27,
	"BEN": 28,
	"BER": 29,
	"BIS": 30,
	"BOS": 31,
	"BRE": 32,
	"BUL": 33,
	"MYA": 34,
	"CAT": 35,
	"CHA": 36,
	"CHE": 37,
	"NYA": 38,
	"ZHO": 39,
	"CHV": 40,
	"COR": 41,
	"COS": 42,
	"CRE": 43,
	"HRV": 44,
	"CES": 45,
	"PRS": 46,
	"DIV": 47,
	"NLD": 48,
	"DZO": 49,
	"EPO": 50,
	"EST": 51,
	"EWE": 52,
	"FAO": 53,
	"FIJ": 54,
	"FIN": 55,
	"FUL": 56,
	"GLG": 57,
	"KAT": 58,
	"DEU": 59,
	"ELL": 60,
	"GRN": 61,
	"GUJ": 62,
	"HAT": 63,
	"HAU": 64,
	"HEB": 65,
	"HER": 66,
	"HIN": 67,
	"HMO": 68,
	"HUN": 69,
	"INA": 70,
	"IND": 71,
	"ILE": 72,
	"GLE": 73,
	"IBO": 74,
	"IPK": 75,
	"IDO": 76,
	"ISL": 77,
	"ITA": 78,
	"IKU": 79,
	"JPN": 80,
	"JAV": 81,
	"KAL": 82,
	"KAN": 83,
	"KAU": 84,
	"KAS": 85,
	"KAZ": 86,
	"KHM": 87,
	"KIK": 88,
	"KIN": 89,
	"KIR": 90,
	"KOM": 91,
	"KON": 92,
	"KOR": 93,
	"KUR": 94,
	"KUA": 95,
	"LAT": 96,
	"LTZ": 97,
	"LUG": 98,
	"LIM": 99,
	"LIN": 100,
	"LAO": 101,
	"LIT": 102,
	"LUB": 103,
	"LAV": 104,
	"GLV": 105,
	"MKD": 106,
	"MLG": 107,
	"MSA": 108,
	"MAL": 109,
	"MLT": 110,
	"MRI": 111,
	"MAR": 112,
	"MAH": 113,
	"MON": 114,
	"NAU": 115,
	"NAV": 116,
	"NDE": 117,
	"NSO": 118,
	"NEP": 119,
	"NDO": 120,
	"NOR": 121,
	"III": 122,
	"NBL": 123,
	"OCI": 124,
	"OJI": 125,
	"CHU": 126,
	"ORM": 127,
	"ORI": 128,
	"OSS": 129,
	"PAN": 130,
	"PLI": 131,
	"FAS": 132,
	"POL": 133,
	"PUS": 134,
	"POR": 135,
	"QUE": 136,
	"ROH": 137,
	"RUN": 138,
	"RON": 139,
	"RUS": 140,
	"SAN": 141,
	"SRD": 142,
	"SND": 143,
	"SMO": 144,
	"SAG": 145,
	"SRP": 146,
	"GLA": 147,
	"SNA": 148,
	"SIN": 149,
	"SLK": 150,
	"SLV": 151,
	"SOM": 152,
	"SOT": 153,
	"SPA": 154,
	"SUN": 155,
	"SWA": 156,
	"SSW": 157,
	"TAM": 158,
	"TEL": 159,
	"TGK": 160,
	"THA": 161,
	"TIR": 162,
	"BOD": 163,
	"TUK": 164,
	"TGL": 165,
	"FIL": 166,
	"TSN": 167,
	"TON": 168,
	"TUR": 169,
	"TSO": 170,
	"TAT": 171,
	"TWI": 172,
	"TAH": 173,
	"UIG": 174,
	"UKR": 175,
	"URD": 176,
	"UZB": 177,
	"VEN": 178,
	"VIE": 179,
	"VOL": 180,
	"WLN": 181,
	"CYM": 182,
	"WOL": 183,
	"FRY": 184,
	"XHO": 185,
	"YID": 186,
	"YOR": 187,
	"ZHA": 188,
	"ZUL": 189,
	"ACE": 190,
	"ACH": 191,
	"ADA": 192,
	"ADY": 193,
	"AFA": 194,
	"AFH": 195,
	"AIN": 196,
	"AKK": 197,
	"ALE": 198,
	"ALG": 199,
	"ALT": 200,
	"ANG": 201,
	"ANP": 202,
	"APA": 203,
	"ARC": 204,
	"ARN": 205,
	"ARP": 206,
	"ART": 207,
	"ARW": 208,
	"AST": 209,
	"ATH": 210,
	"AUS": 211,
	"AWA": 212,
	"BAD": 213,
	"BAI": 214,
	"BAL": 215,
	"BAN": 216,
	"BAS": 217,
	"BAT": 218,
	"BEJ": 219,
	"BEM": 220,
	"BHO": 221,
	"BIK": 222,
	"BIN": 223,
	"BLA": 224,
	"BNT": 225,
	"BRA": 226,
	"BTK": 227,
	"BUA": 228,
	"BUG": 229,
	"BYN": 230,
	"CAD": 231,
	"CAI": 232,
	"CAR": 233,
	"CAU": 234,
	"CEB": 235,
	"CEL": 236,
	"CHB": 237,
	"CHG": 238,
	"CHK": 239,
	"CHM": 240,
	"CHN": 241,
	"CHO": 242,
	"CHP": 243,
	"CHR": 244,
	"CHY": 245,
	"CMC": 246,
	"COP": 247,
	"CPE": 248,
	"CPF": 249,
	"CPP": 250,
	"CRH": 251,
	"CRP": 252,
	"CSB": 253,
	"CUS": 254,
	"DAK": 255,
	"DAR": 256,
	"DAY": 257,
	"DEL": 258,
	"DEN": 259,
	"DGR": 260,
	"DIN": 261,
	"DOI": 262,
	"DRA": 263,
	"DSB": 264,
	"DUA": 265,
	"DUM": 266,
	"DYU": 267,
	"EFI": 268,
	"EGY": 269,
	"EKA": 270,
	"ELX": 271,
	"ENM": 272,
	"EWO": 273,
	"FAN": 274,
	"FAT": 275,
	"FIU": 276,
	"FON": 277,
	"FRM": 278,
	"FRO": 279,
	"FRR": 280,
	"FRS": 281,
	"FUR": 282,
	"GAA": 283,
	"GAY": 284,
	"GBA": 285,
	"GEM": 286,
	"GEZ": 287,
	"GIL": 288,
	"GMH": 289,
	"GOH": 290,
	"GON": 291,
	"GOR": 292,
	"GOT": 293,
	"GRB": 294,
	"GRC": 295,
	"GSW": 296,
	"GWI": 297,
	"HAI": 298,
	"HAW": 299,
	"HIL": 300,
	"HIM": 301,
	"HIT": 302,
	"HMN": 303,
	"HSB": 304,
	"HUP": 305,
	"IBA": 306,
	"IJO": 307,
	"ILO": 308,
	"INC": 309,
	"INE": 310,
	"INH": 311,
	"IRA": 312,
	"IRO": 313,
	"JBO": 314,
	"JPR": 315,
	"JRB": 316,
	"KAA": 317,
	"KAB": 318,
	"KAC": 319,
	"KAM": 320,
	"KAR": 321,
	"KAW": 322,
	"KBD": 323,
	"KHA": 324,
	"KHI": 325,
	"KHO": 326,
	"KMB": 327,
	"KOK": 328,
	"KOS": 329,
	"KPE": 330,
	"KRC": 331,
	"KRL": 332,
	"KRO": 333,
	"KRU": 334,
	"KUM": 335,
	"KUT": 336,
	"LAD": 337,
	"LAH": 338,
	"LAM": 339,
	"LEZ": 340,
	"LOL": 341,
	"LOZ": 342,
	"LUA": 343,
	"LUI": 344,
	"LUN": 345,
	"LUO": 346,
	"LUS": 347,
	"MAD": 348,
	"MAG": 349,
	"MAI": 350,
	"MAK": 351,
	"MAN": 352,
	"MAP": 353,
	"MAS": 354,
	"MDF": 355,
	"MDR": 356,
	"MEN": 357,
	"MGA": 358,
	"MIC": 359,
	"MIN": 360,
	"MIS": 361,
	"MKH": 362,
	"MNC": 363,
	"MNI": 364,
	"MNO": 365,
	"MOH": 366,
	"MOS": 367,
	"MUL": 368,
	"MUN": 369,
	"MUS": 370,
	"MWL": 371,
	"MWR": 372,
	"MYN": 373,
	"MYV": 374,
	"NAH": 375,
	"NAI": 376,
	"NAP": 377,
	"NDS": 378,
	"NEW": 379,
	"NIA": 380,
	"NIC": 381,
	"NIU": 382,
	"NOG": 383,
	"NON": 384,
	"NQO": 385,
	"NUB": 386,
	"NWC": 387,
	"NYM": 388,
	"NYN": 389,
	"NYO": 390,
	"NZI": 391,
	"OSA": 392,
	"OTA": 393,
	"OTO": 394,
	"PAA": 395,
	"PAG": 396,
	"PAL": 397,
	"PAM": 398,
	"PAP": 399,
	"PAU": 400,
	"PEO": 401,
	"PHI": 402,
	"PHN": 403,
	"PON": 404,
	"PRA": 405,
	"PRO": 406,
	"RAJ": 407,
	"RAP": 408,
	"RAR": 409,
	"ROA": 410,
	"ROM": 411,
	"RUP": 412,
	"SAD": 413,
	"SAH": 414,
	"SAI": 415,
	"SAL": 416,
	"SAM": 417,
	"SAS": 418,
	"SAT": 419,
	"SCN": 420,
	"SCO": 421,
	"SEL": 422,
	"SEM": 423,
	"SGA": 424,
	"SGN": 425,
	"SHN": 426,
	"SID": 427,
	"SIO": 428,
	"SIT": 429,
	"SLA": 430,
	"SMI": 431,
	"SMN": 432,
	"SMS": 433,
	"SNK": 434,
	"SOG": 435,
	"SON": 436,
	"SRN": 437,
	"SRR": 438,
	"SSA": 439,
	"SUK": 440,
	"SUS": 441,
	"SUX": 442,
	"SYC": 443,
	"SYR": 444,
	"TAI": 445,
	"TEM": 446,
	"TER": 447,
	"TET": 448,
	"TIG": 449,
	"TIV": 450,
	"TKL": 451,
	"TLH": 452,
	"TLI": 453,
	"TMH": 454,
	"TOG": 455,
	"TPI": 456,
	"TSI": 457,
	"TUM": 458,
	"TUP": 459,
	"TUT": 460,
	"TVL": 461,
	"TYV": 462,
	"UDM": 463,
	"UGA": 464,
	"UMB": 465,
	"VAI": 466,
	"VOT": 467,
	"WAK": 468,
	"WAL": 469,
	"WAR": 470,
	"WAS": 471,
	"WEN": 472,
	"XAL": 473,
	"YAO": 474,
	"YAP": 475,
	"YPK": 476,
	"ZAP": 477,
	"ZBL": 478,
	"ZEN": 479,
	"ZGH": 480,
	"ZND": 481,
	"ZUN": 482,
	"ZXX": 483,
	"ZZA": 484,
}

func (x LanguageCode) String() string {
	return proto.EnumName(LanguageCode_name, int32(x))
}
func (LanguageCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ls_498d226c3b5da2d0, []int{0}
}

// Request message for `Maalfrid.DetectLanguage`
type DetectLanguageRequest struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DetectLanguageRequest) Reset()         { *m = DetectLanguageRequest{} }
func (m *DetectLanguageRequest) String() string { return proto.CompactTextString(m) }
func (*DetectLanguageRequest) ProtoMessage()    {}
func (*DetectLanguageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ls_498d226c3b5da2d0, []int{0}
}
func (m *DetectLanguageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetectLanguageRequest.Unmarshal(m, b)
}
func (m *DetectLanguageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetectLanguageRequest.Marshal(b, m, deterministic)
}
func (dst *DetectLanguageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetectLanguageRequest.Merge(dst, src)
}
func (m *DetectLanguageRequest) XXX_Size() int {
	return xxx_messageInfo_DetectLanguageRequest.Size(m)
}
func (m *DetectLanguageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DetectLanguageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DetectLanguageRequest proto.InternalMessageInfo

func (m *DetectLanguageRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

// Reply message for `Maalfrid.DetectLanguage`
type DetectLanguageReply struct {
	Languages            []*Language `protobuf:"bytes,1,rep,name=languages" json:"languages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *DetectLanguageReply) Reset()         { *m = DetectLanguageReply{} }
func (m *DetectLanguageReply) String() string { return proto.CompactTextString(m) }
func (*DetectLanguageReply) ProtoMessage()    {}
func (*DetectLanguageReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ls_498d226c3b5da2d0, []int{1}
}
func (m *DetectLanguageReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetectLanguageReply.Unmarshal(m, b)
}
func (m *DetectLanguageReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetectLanguageReply.Marshal(b, m, deterministic)
}
func (dst *DetectLanguageReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetectLanguageReply.Merge(dst, src)
}
func (m *DetectLanguageReply) XXX_Size() int {
	return xxx_messageInfo_DetectLanguageReply.Size(m)
}
func (m *DetectLanguageReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DetectLanguageReply.DiscardUnknown(m)
}

var xxx_messageInfo_DetectLanguageReply proto.InternalMessageInfo

func (m *DetectLanguageReply) GetLanguages() []*Language {
	if m != nil {
		return m.Languages
	}
	return nil
}

type Language struct {
	Code                 LanguageCode `protobuf:"varint,1,opt,name=code,enum=maalfrid.service.language.LanguageCode" json:"code,omitempty"`
	Count                float64      `protobuf:"fixed64,2,opt,name=count" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Language) Reset()         { *m = Language{} }
func (m *Language) String() string { return proto.CompactTextString(m) }
func (*Language) ProtoMessage()    {}
func (*Language) Descriptor() ([]byte, []int) {
	return fileDescriptor_ls_498d226c3b5da2d0, []int{2}
}
func (m *Language) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Language.Unmarshal(m, b)
}
func (m *Language) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Language.Marshal(b, m, deterministic)
}
func (dst *Language) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Language.Merge(dst, src)
}
func (m *Language) XXX_Size() int {
	return xxx_messageInfo_Language.Size(m)
}
func (m *Language) XXX_DiscardUnknown() {
	xxx_messageInfo_Language.DiscardUnknown(m)
}

var xxx_messageInfo_Language proto.InternalMessageInfo

func (m *Language) GetCode() LanguageCode {
	if m != nil {
		return m.Code
	}
	return LanguageCode_UND
}

func (m *Language) GetCount() float64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func init() {
	proto.RegisterType((*DetectLanguageRequest)(nil), "maalfrid.service.language.DetectLanguageRequest")
	proto.RegisterType((*DetectLanguageReply)(nil), "maalfrid.service.language.DetectLanguageReply")
	proto.RegisterType((*Language)(nil), "maalfrid.service.language.Language")
	proto.RegisterEnum("maalfrid.service.language.LanguageCode", LanguageCode_name, LanguageCode_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for LanguageDetector service

type LanguageDetectorClient interface {
	DetectLanguage(ctx context.Context, in *DetectLanguageRequest, opts ...grpc.CallOption) (*DetectLanguageReply, error)
}

type languageDetectorClient struct {
	cc *grpc.ClientConn
}

func NewLanguageDetectorClient(cc *grpc.ClientConn) LanguageDetectorClient {
	return &languageDetectorClient{cc}
}

func (c *languageDetectorClient) DetectLanguage(ctx context.Context, in *DetectLanguageRequest, opts ...grpc.CallOption) (*DetectLanguageReply, error) {
	out := new(DetectLanguageReply)
	err := grpc.Invoke(ctx, "/maalfrid.service.language.LanguageDetector/DetectLanguage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for LanguageDetector service

type LanguageDetectorServer interface {
	DetectLanguage(context.Context, *DetectLanguageRequest) (*DetectLanguageReply, error)
}

func RegisterLanguageDetectorServer(s *grpc.Server, srv LanguageDetectorServer) {
	s.RegisterService(&_LanguageDetector_serviceDesc, srv)
}

func _LanguageDetector_DetectLanguage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DetectLanguageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LanguageDetectorServer).DetectLanguage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/maalfrid.service.language.LanguageDetector/DetectLanguage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LanguageDetectorServer).DetectLanguage(ctx, req.(*DetectLanguageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LanguageDetector_serviceDesc = grpc.ServiceDesc{
	ServiceName: "maalfrid.service.language.LanguageDetector",
	HandlerType: (*LanguageDetectorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DetectLanguage",
			Handler:    _LanguageDetector_DetectLanguage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "maalfrid/service/language/ls.proto",
}

func init() {
	proto.RegisterFile("maalfrid/service/language/ls.proto", fileDescriptor_ls_498d226c3b5da2d0)
}

var fileDescriptor_ls_498d226c3b5da2d0 = []byte{
	// 2199 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0xd8, 0x77, 0x94, 0x1c, 0xc5,
	0xb5, 0xc7, 0x71, 0x56, 0x4b, 0x10, 0x0b, 0x8f, 0xf7, 0x7d, 0x0b, 0xbc, 0x27, 0x78, 0x49, 0x16,
	0xc6, 0xc8, 0x60, 0x4b, 0x58, 0x38, 0xe3, 0x54, 0x33, 0xd3, 0x3b, 0xdd, 0x3b, 0xdd, 0x55, 0xa3,
	0xea, 0xee, 0x99, 0x9d, 0xb1, 0xb1, 0x2d, 0xa4, 0x05, 0x63, 0x0b, 0x24, 0xa4, 0x15, 0x06, 0x47,
	0x91, 0x45, 0xce, 0x39, 0xe7, 0x9c, 0x73, 0xce, 0x39, 0xe7, 0x9c, 0x73, 0xce, 0x39, 0xf9, 0x4c,
	0xdd, 0x2b, 0xa7, 0x63, 0xfb, 0xd8, 0xff, 0x7d, 0xe6, 0x57, 0xb7, 0xaa, 0xab, 0xbb, 0x7a, 0xfa,
	0xd4, 0xa9, 0x81, 0x49, 0x1b, 0xcf, 0x98, 0x31, 0x7b, 0x83, 0x79, 0x1b, 0xcd, 0x9a, 0x3a, 0x7f,
	0x74, 0xde, 0x66, 0x1b, 0xcd, 0x1c, 0x9d, 0x3a, 0x7b, 0xc6, 0x26, 0x1b, 0x2e, 0x98, 0xb1, 0xe1,
	0xe8, 0xd4, 0xd9, 0xf3, 0xa7, 0xcc, 0x9d, 0x37, 0x67, 0x6c, 0xce, 0xe0, 0x2a, 0x8b, 0x6b, 0xa6,
	0x68, 0xcd, 0x94, 0xc5, 0x35, 0x93, 0xd6, 0x1a, 0x58, 0xb9, 0x36, 0x3a, 0x36, 0x3a, 0x73, 0x2c,
	0xd5, 0xc4, 0x8f, 0x6e, 0xba, 0x60, 0x74, 0xfe, 0xd8, 0xe0, 0xe0, 0xc0, 0x92, 0x63, 0xa3, 0x9b,
	0x8f, 0x4d, 0xe8, 0x9b, 0xd8, 0x37, 0x79, 0x59, 0x1f, 0x3c, 0x69, 0x64, 0x60, 0xc5, 0xbf, 0x2e,
	0x9e, 0x3b, 0x7b, 0x8b, 0x41, 0x33, 0xb0, 0xec, 0xe2, 0xf1, 0xe6, 0x4f, 0xe8, 0x9b, 0xd8, 0x3f,
	0x79, 0xb9, 0x69, 0xab, 0x4d, 0xf9, 0xbb, 0x97, 0x9c, 0xf2, 0xc7, 0xce, 0x7f, 0xea, 0x35, 0x69,
	0xbd, 0x81, 0xf1, 0x8b, 0xe3, 0xc1, 0x75, 0x07, 0x96, 0x9c, 0x39, 0x67, 0xd6, 0x68, 0xb8, 0xf2,
	0x0a, 0xd3, 0xd6, 0xf8, 0x27, 0x46, 0xaa, 0xce, 0x99, 0x35, 0xea, 0x43, 0xa7, 0xc1, 0x95, 0x06,
	0x96, 0x9a, 0x39, 0x67, 0xc1, 0x26, 0x63, 0x13, 0xc6, 0x4d, 0xec, 0x9b, 0xdc, 0xe7, 0xe5, 0xc7,
	0x9a, 0x0b, 0x57, 0x1f, 0x58, 0xfe, 0xcf, 0x8b, 0x07, 0x97, 0x19, 0xe8, 0x2f, 0x6d, 0x8d, 0x25,
	0x7a, 0xb0, 0xae, 0x42, 0x5f, 0x80, 0x75, 0x8c, 0xeb, 0xa1, 0x66, 0x2c, 0xfd, 0x3d, 0xe4, 0xed,
	0x88, 0x25, 0x7b, 0x88, 0x6c, 0x9d, 0xa5, 0x7a, 0x18, 0xf2, 0x86, 0xa5, 0x43, 0x53, 0x66, 0x58,
	0x46, 0x30, 0xcc, 0x78, 0x41, 0xc4, 0xb2, 0x3d, 0x98, 0x4a, 0x83, 0x81, 0x00, 0xe3, 0x59, 0x2e,
	0x60, 0xc8, 0xb3, 0x7c, 0x40, 0xc3, 0xf0, 0x6f, 0xa1, 0x78, 0x7a, 0xc2, 0x0a, 0x21, 0xc9, 0x62,
	0xfe, 0x3d, 0xc0, 0x1b, 0x10, 0xd4, 0xf9, 0x8f, 0x1e, 0xe2, 0x4e, 0xc4, 0x60, 0x48, 0xf2, 0x8c,
	0x15, 0x03, 0x5a, 0x86, 0x95, 0x04, 0x11, 0x2b, 0x07, 0x74, 0x32, 0xfe, 0x33, 0xa0, 0x1b, 0xf1,
	0x5f, 0x3d, 0x54, 0x4c, 0xc6, 0x04, 0x41, 0x83, 0x55, 0xc2, 0xe4, 0xcb, 0x9c, 0x55, 0x43, 0x12,
	0xa5, 0xfc, 0xb7, 0xc0, 0xf2, 0x3f, 0x02, 0xcf, 0xff, 0x06, 0x24, 0x39, 0xff, 0x17, 0xe0, 0x72,
	0xfe, 0x3f, 0xc0, 0x47, 0x4c, 0x0c, 0x28, 0x53, 0x3e, 0xd7, 0x43, 0xd6, 0x31, 0x4c, 0xea, 0xa1,
	0x6a, 0x0a, 0x56, 0x0b, 0x88, 0x0d, 0x9f, 0x17, 0x44, 0xac, 0x1e, 0x9e, 0x61, 0xc7, 0xf0, 0x85,
	0x1e, 0xba, 0xb1, 0x63, 0x0d, 0x69, 0x6a, 0x31, 0x39, 0xc0, 0x79, 0xbe, 0x28, 0xc8, 0x59, 0x33,
	0xc0, 0x47, 0xac, 0x15, 0xee, 0xd4, 0xb7, 0xf8, 0x52, 0x48, 0xa2, 0x9c, 0x2f, 0xf7, 0xd0, 0xf4,
	0x39, 0x53, 0xc2, 0x5a, 0x24, 0x2d, 0xa6, 0x86, 0x91, 0xd3, 0x1a, 0x6b, 0x87, 0xa4, 0xeb, 0xf8,
	0x4a, 0xb8, 0xaf, 0xa6, 0x63, 0x5a, 0x40, 0x5e, 0xb0, 0x4e, 0x40, 0x3b, 0xe2, 0xab, 0x61, 0x99,
	0x8c, 0xe3, 0x6b, 0x01, 0xc9, 0x30, 0x5f, 0x17, 0x58, 0xbe, 0x11, 0x50, 0xa6, 0x7c, 0xb3, 0x87,
	0x7a, 0x5a, 0xe7, 0x5b, 0x3d, 0x34, 0x4c, 0xc1, 0xb7, 0xc3, 0xc8, 0x51, 0xc9, 0xba, 0x61, 0x9c,
	0x34, 0xe5, 0x3b, 0xa1, 0xc6, 0x5b, 0xbe, 0x1b, 0x50, 0x0e, 0xf3, 0xbd, 0x30, 0x55, 0x53, 0xf0,
	0x7d, 0x41, 0xc9, 0x0f, 0x02, 0xa2, 0x0a, 0x46, 0xe0, 0xa9, 0x04, 0x24, 0x96, 0x6a, 0x40, 0xe6,
	0xa8, 0x05, 0x94, 0x96, 0xa8, 0x87, 0xc4, 0x1a, 0x86, 0x04, 0x35, 0xea, 0x01, 0x69, 0x44, 0x2c,
	0xf3, 0x89, 0x48, 0x42, 0x52, 0x71, 0x0c, 0x07, 0x34, 0x1b, 0x34, 0x02, 0x6a, 0x8e, 0x34, 0x20,
	0x4f, 0xc9, 0x02, 0x0a, 0x83, 0x0d, 0x68, 0x94, 0xb8, 0x1e, 0x86, 0x9b, 0x96, 0x66, 0x80, 0x69,
	0x31, 0x5d, 0xee, 0x2b, 0xc5, 0x0b, 0x2c, 0xb9, 0xa0, 0xa4, 0x10, 0xe4, 0x94, 0x82, 0x2e, 0xad,
	0x80, 0x38, 0xa3, 0x1d, 0x90, 0x34, 0x18, 0x11, 0x58, 0x3a, 0x02, 0x4f, 0x37, 0xc0, 0x65, 0xfc,
	0x50, 0x60, 0xf9, 0x91, 0xc0, 0xb3, 0x5e, 0x40, 0xe9, 0xf9, 0xb1, 0xc0, 0xf0, 0x93, 0x1e, 0x52,
	0x53, 0xf0, 0xd3, 0x80, 0xa2, 0xcb, 0x8c, 0x80, 0xb2, 0xce, 0xfa, 0x01, 0x49, 0xc6, 0x4c, 0x81,
	0x65, 0x96, 0x14, 0x3b, 0x46, 0x25, 0x29, 0xd8, 0x40, 0x8a, 0x2b, 0x6c, 0x28, 0x4d, 0x2d, 0x7e,
	0x26, 0xcf, 0xa7, 0xc5, 0x46, 0xe1, 0x3d, 0x6c, 0xd4, 0xf8, 0x79, 0x40, 0x5a, 0xe7, 0x17, 0x01,
	0xb9, 0x61, 0x76, 0x80, 0x49, 0xd9, 0x58, 0x9a, 0x0a, 0x36, 0x09, 0xf0, 0x09, 0x73, 0xa4, 0xc9,
	0x33, 0x57, 0x10, 0xb3, 0x69, 0x80, 0xb3, 0xcc, 0x0b, 0xaf, 0x96, 0x29, 0x99, 0x2f, 0x68, 0x31,
	0x16, 0x50, 0x8b, 0x58, 0x10, 0x90, 0x3b, 0x36, 0x0b, 0x88, 0x9a, 0xfc, 0x52, 0x9a, 0x1c, 0x9b,
	0xcb, 0x77, 0xc3, 0xb3, 0x45, 0x58, 0x82, 0x24, 0xe1, 0x57, 0x21, 0xa9, 0xa4, 0xfc, 0xba, 0x07,
	0x57, 0x4d, 0xf8, 0x4d, 0xc0, 0x70, 0xc2, 0x6f, 0xe5, 0x5f, 0x50, 0xf2, 0xbb, 0x90, 0xf8, 0x8c,
	0xdf, 0x0f, 0x8e, 0xef, 0x21, 0x61, 0x61, 0x5f, 0x50, 0x9e, 0xb3, 0x65, 0x50, 0xd3, 0x58, 0xb6,
	0x12, 0xa5, 0x09, 0x5b, 0x07, 0x0d, 0x99, 0x9c, 0x6d, 0x24, 0x73, 0x29, 0xdb, 0x8a, 0xca, 0x9c,
	0xed, 0x34, 0xf3, 0x6c, 0x1f, 0x34, 0xbd, 0x8c, 0x58, 0x14, 0xe4, 0x5d, 0xcc, 0x0e, 0xa2, 0xd2,
	0xb2, 0xa3, 0x66, 0x96, 0x9d, 0x34, 0xcb, 0xd9, 0x39, 0x28, 0x37, 0x96, 0x5d, 0x44, 0xbe, 0xc6,
	0xae, 0x22, 0x5b, 0x63, 0x37, 0x51, 0xe6, 0xd8, 0x5d, 0xeb, 0xea, 0xec, 0xa1, 0x75, 0x4d, 0xf6,
	0x0c, 0xaa, 0xa7, 0x86, 0xbd, 0xb4, 0x87, 0x61, 0x6f, 0x51, 0x62, 0xd9, 0x47, 0x94, 0x36, 0xd8,
	0x57, 0xd5, 0x62, 0x3f, 0x91, 0xcb, 0xd8, 0x5f, 0x55, 0x70, 0x80, 0xa8, 0x69, 0x38, 0x50, 0x54,
	0x5a, 0x0e, 0x12, 0xb5, 0x0d, 0x07, 0x8b, 0xf2, 0x36, 0x87, 0x04, 0x15, 0x26, 0xe3, 0x50, 0x51,
	0x94, 0x72, 0x98, 0xa8, 0xde, 0xe0, 0x70, 0x51, 0x6c, 0x38, 0x42, 0x94, 0x78, 0x8e, 0x0c, 0xaa,
	0xb8, 0x1a, 0x47, 0x49, 0x56, 0x36, 0x38, 0x5a, 0x7b, 0xa4, 0x1c, 0x23, 0xcf, 0x34, 0x49, 0x39,
	0x56, 0xb2, 0xdc, 0x72, 0x9c, 0xc8, 0x59, 0x8e, 0xd7, 0x1e, 0x9e, 0x13, 0xb4, 0xd5, 0x71, 0xa2,
	0xce, 0xa0, 0xe0, 0x24, 0x51, 0x3b, 0xe1, 0x64, 0xcd, 0x62, 0x4e, 0x09, 0x2a, 0x93, 0x3a, 0xa7,
	0x8a, 0x1a, 0x9e, 0xd3, 0x44, 0xbe, 0xc6, 0xe9, 0xa2, 0x6e, 0x85, 0x33, 0x82, 0x5a, 0x91, 0xe5,
	0x4c, 0x51, 0x12, 0x71, 0x96, 0xc8, 0xa5, 0x9c, 0x1d, 0xd4, 0x4e, 0x2d, 0xe7, 0x04, 0x55, 0x3b,
	0x19, 0xe7, 0x4a, 0xe6, 0x52, 0xce, 0x93, 0x39, 0xfb, 0x0e, 0xe7, 0x07, 0x8d, 0xc4, 0x8e, 0x0b,
	0x82, 0x3a, 0x49, 0x8d, 0x0b, 0x45, 0xce, 0x73, 0x51, 0x50, 0x37, 0x36, 0x5c, 0x2c, 0x2a, 0x53,
	0x2e, 0x09, 0x32, 0xd5, 0x88, 0x4b, 0x55, 0x31, 0x97, 0x89, 0x6a, 0x86, 0xcb, 0x55, 0x1d, 0xae,
	0x10, 0x0d, 0x19, 0xae, 0x54, 0xc5, 0x5c, 0x25, 0x4a, 0x2c, 0x57, 0x8b, 0x1a, 0x0d, 0xae, 0x11,
	0xa5, 0x11, 0xd7, 0xaa, 0xea, 0x5c, 0xa7, 0x2a, 0xb8, 0x5e, 0x64, 0xeb, 0xdc, 0xa0, 0x6a, 0x72,
	0xa3, 0xa8, 0x69, 0xb8, 0x49, 0xe4, 0xab, 0xdc, 0xac, 0xb2, 0xdc, 0xa2, 0x6a, 0x72, 0xab, 0xaa,
	0xe0, 0x36, 0x55, 0x9b, 0xdb, 0x45, 0x79, 0xc1, 0x1d, 0xa2, 0x22, 0xe6, 0x4e, 0x51, 0x99, 0x73,
	0x97, 0xa8, 0x6d, 0xb8, 0x5b, 0xd6, 0xdc, 0xd4, 0xb8, 0x47, 0x95, 0x70, 0xaf, 0x2a, 0xe5, 0x3e,
	0x95, 0xe5, 0x7e, 0x55, 0xce, 0x03, 0xaa, 0x82, 0x07, 0x45, 0xd1, 0x30, 0x0f, 0xa9, 0x32, 0x1e,
	0x16, 0xc5, 0x8e, 0x47, 0x44, 0x49, 0x83, 0x47, 0x55, 0x96, 0xc7, 0x44, 0xa9, 0xe1, 0x71, 0x91,
	0x2d, 0x78, 0x42, 0xe4, 0x0d, 0x4f, 0x8a, 0x8a, 0x06, 0x4f, 0x89, 0x4a, 0xc3, 0xd3, 0xaa, 0x3a,
	0xcf, 0x88, 0x3a, 0x96, 0x67, 0x65, 0xa5, 0x4d, 0x8d, 0xe7, 0x54, 0x09, 0xcf, 0xab, 0x3c, 0x2f,
	0xa8, 0x4a, 0x5e, 0x14, 0x45, 0x15, 0x5e, 0x52, 0xa5, 0xbc, 0x2c, 0x8a, 0x2b, 0xbc, 0xa2, 0xaa,
	0xf3, 0xaa, 0xaa, 0xc1, 0x6b, 0xaa, 0x8c, 0xd7, 0x55, 0x96, 0x37, 0x54, 0x8e, 0x37, 0x55, 0x4d,
	0xde, 0x52, 0x79, 0xde, 0x56, 0x75, 0x78, 0x47, 0x94, 0x55, 0x79, 0x57, 0xe4, 0x9a, 0xbc, 0x27,
	0x6a, 0x46, 0xbc, 0xaf, 0x1a, 0xe2, 0x03, 0x55, 0x93, 0x0f, 0x45, 0x3e, 0xe6, 0x23, 0x55, 0x93,
	0x8f, 0x45, 0x79, 0x85, 0x4f, 0x44, 0x65, 0xce, 0xa7, 0x41, 0x35, 0xd3, 0xe0, 0x33, 0x95, 0x67,
	0xe1, 0x38, 0x51, 0x87, 0x2d, 0x45, 0x51, 0xca, 0x56, 0x2a, 0xcb, 0xd6, 0xa2, 0xba, 0x67, 0x1b,
	0x51, 0x62, 0xd9, 0x56, 0xe4, 0x12, 0xb6, 0x13, 0x79, 0xc3, 0xf6, 0xa2, 0xbc, 0xc2, 0x22, 0x51,
	0x69, 0xd8, 0x41, 0x95, 0xb1, 0xa3, 0xa8, 0x53, 0xb2, 0x53, 0x50, 0x34, 0x94, 0xb0, 0xb3, 0xa8,
	0xde, 0x61, 0x17, 0x51, 0xc3, 0xb0, 0xab, 0x28, 0x1d, 0x61, 0x37, 0x91, 0xcd, 0xd8, 0x5d, 0xd4,
	0x76, 0xec, 0x31, 0x4e, 0xbe, 0xc5, 0x96, 0x3d, 0x55, 0x05, 0x7b, 0x89, 0x92, 0x92, 0xbd, 0x45,
	0xce, 0xb2, 0x8f, 0xc8, 0x67, 0xec, 0xab, 0x72, 0xec, 0xa7, 0xf2, 0xec, 0xaf, 0xca, 0x39, 0x40,
	0x54, 0x7a, 0x0e, 0x0c, 0xaa, 0x1b, 0xc3, 0x41, 0xaa, 0x0e, 0x07, 0x8b, 0x2a, 0x86, 0x43, 0x44,
	0x51, 0xc6, 0xa1, 0xaa, 0x2e, 0x87, 0x89, 0x92, 0x94, 0xc3, 0x45, 0x59, 0xcc, 0x11, 0x22, 0x17,
	0x73, 0xa4, 0xca, 0x72, 0x94, 0xca, 0x73, 0xb4, 0xaa, 0xe0, 0x18, 0x91, 0xaf, 0x70, 0xac, 0xaa,
	0xca, 0x71, 0xa2, 0xbc, 0xcd, 0xf1, 0xa2, 0x76, 0xc2, 0x09, 0x41, 0xb1, 0x49, 0x38, 0x51, 0xd5,
	0xe6, 0x24, 0x51, 0x92, 0x72, 0xb2, 0x2a, 0xe3, 0x14, 0x55, 0xc1, 0xa9, 0xa2, 0xcc, 0x72, 0x9a,
	0x28, 0xaf, 0x70, 0xba, 0xa8, 0x6c, 0x72, 0x46, 0x50, 0x52, 0x31, 0x9c, 0x29, 0x1a, 0x76, 0x9c,
	0x25, 0x4a, 0x1d, 0x67, 0x8b, 0x6c, 0x95, 0x73, 0x54, 0x11, 0xe7, 0xaa, 0x62, 0xce, 0x13, 0x79,
	0xc3, 0xf9, 0x2a, 0xc7, 0x05, 0x41, 0xc3, 0x15, 0xc7, 0x85, 0xa2, 0xa6, 0xe7, 0x22, 0x91, 0xaf,
	0x70, 0x71, 0x50, 0xc3, 0x18, 0x2e, 0x51, 0x55, 0xb8, 0x54, 0x55, 0xe5, 0x32, 0x55, 0xc6, 0xe5,
	0x2a, 0xcf, 0x15, 0xaa, 0x36, 0x57, 0x8a, 0x2a, 0x35, 0xae, 0x12, 0xc5, 0x86, 0xab, 0x55, 0x09,
	0xd7, 0xa8, 0x1c, 0xd7, 0x8a, 0xb2, 0x0a, 0xd7, 0x89, 0x5c, 0x83, 0xeb, 0x55, 0x39, 0x37, 0x88,
	0x9a, 0x11, 0x37, 0x8a, 0x7c, 0x95, 0x9b, 0x54, 0x29, 0x37, 0xab, 0x1c, 0xb7, 0xa8, 0x4a, 0x6e,
	0x15, 0x95, 0x19, 0xb7, 0xa9, 0x0a, 0x6e, 0x0f, 0x4a, 0x4d, 0x8d, 0x3b, 0x54, 0x31, 0x77, 0xaa,
	0x32, 0xee, 0x12, 0x45, 0x5d, 0xee, 0x16, 0xb9, 0x94, 0x7b, 0x54, 0x5d, 0xee, 0x15, 0x95, 0x86,
	0xfb, 0x54, 0x09, 0xf7, 0xab, 0x2c, 0x0f, 0xa8, 0x1c, 0x0f, 0xaa, 0x72, 0x1e, 0x0a, 0xca, 0x4c,
	0x8d, 0x87, 0x55, 0x75, 0x1e, 0x51, 0x25, 0x3c, 0xaa, 0x6a, 0xf0, 0x98, 0xca, 0xf2, 0xb8, 0xaa,
	0xc9, 0x13, 0xaa, 0x9c, 0x27, 0x45, 0xb5, 0x21, 0x9e, 0x52, 0x79, 0x9e, 0x16, 0x45, 0x96, 0x67,
	0x44, 0x75, 0xc3, 0xb3, 0xa2, 0xa4, 0xca, 0x73, 0x2a, 0xcb, 0xf3, 0xaa, 0x9c, 0x17, 0x44, 0x8d,
	0x98, 0x17, 0x45, 0xb6, 0xca, 0x4b, 0xaa, 0x84, 0x97, 0x55, 0x8e, 0x57, 0x44, 0x2e, 0xe6, 0x55,
	0x55, 0xce, 0x6b, 0xa2, 0x32, 0xe5, 0x75, 0x95, 0xe5, 0x0d, 0x55, 0xce, 0x9b, 0xa2, 0x76, 0xca,
	0x5b, 0x2a, 0xcf, 0xdb, 0xa2, 0x8e, 0xe5, 0x1d, 0x55, 0x8b, 0x77, 0x83, 0xac, 0x89, 0x79, 0x4f,
	0x95, 0xf0, 0xbe, 0xaa, 0xc9, 0x07, 0xa2, 0x5a, 0xce, 0x87, 0xa2, 0xa8, 0xcd, 0x47, 0xa2, 0xc4,
	0xf0, 0xb1, 0xaa, 0xca, 0x27, 0xaa, 0x92, 0x4f, 0x45, 0xae, 0xce, 0x67, 0x2a, 0xcb, 0xc2, 0xfe,
	0xa0, 0xe9, 0x8e, 0x2d, 0x45, 0x65, 0x85, 0xad, 0x44, 0xed, 0x2a, 0x5b, 0x8b, 0x3a, 0x19, 0xdb,
	0xa8, 0x2c, 0xdb, 0xaa, 0x1c, 0xdb, 0x89, 0xba, 0x09, 0xdb, 0xf7, 0xcb, 0x2e, 0xd2, 0xb0, 0x48,
	0x54, 0x18, 0x76, 0x50, 0x39, 0x76, 0xec, 0x97, 0x9d, 0xa5, 0x61, 0x27, 0x55, 0x9d, 0x9d, 0x55,
	0x29, 0xbb, 0xa8, 0x32, 0x76, 0x55, 0x35, 0xd9, 0x4d, 0x55, 0xb2, 0xbb, 0x28, 0x72, 0xec, 0x21,
	0x8a, 0x13, 0xf6, 0x54, 0x59, 0xf6, 0x12, 0x39, 0xcb, 0xde, 0x22, 0x6f, 0xd8, 0x47, 0xe5, 0xd8,
	0x37, 0xc8, 0x9b, 0x61, 0xf6, 0x53, 0x35, 0xd9, 0x5f, 0xe5, 0x39, 0x40, 0xe4, 0x0c, 0x07, 0xaa,
	0x32, 0x0e, 0x12, 0x95, 0x4d, 0x0e, 0xee, 0x97, 0x7d, 0x67, 0x8d, 0x43, 0x54, 0x31, 0x87, 0xaa,
	0x12, 0x0e, 0x53, 0xa5, 0x1c, 0xae, 0xca, 0x38, 0x42, 0x95, 0x73, 0xa4, 0xaa, 0xe0, 0x28, 0x51,
	0xd5, 0x72, 0xb4, 0xca, 0x71, 0x8c, 0x28, 0x4a, 0x39, 0x56, 0x95, 0x71, 0x9c, 0xa8, 0x6e, 0x38,
	0x5e, 0x65, 0x39, 0x41, 0x14, 0x5b, 0x4e, 0x14, 0x25, 0x35, 0x4e, 0x52, 0x39, 0x4e, 0x56, 0x15,
	0x9c, 0x22, 0x4a, 0x0d, 0xa7, 0x8a, 0xb2, 0x84, 0xd3, 0x54, 0x96, 0xd3, 0x55, 0x39, 0x67, 0x88,
	0x6c, 0x83, 0x33, 0x45, 0xae, 0xce, 0x59, 0x2a, 0xcb, 0xd9, 0x22, 0x6f, 0x39, 0x47, 0xe5, 0x39,
	0x57, 0x94, 0x1b, 0xce, 0x13, 0x95, 0x0d, 0xce, 0x57, 0xe5, 0x5c, 0xa0, 0x1a, 0xe1, 0x42, 0x51,
	0xa7, 0xca, 0x45, 0x2a, 0xcf, 0xc5, 0xfd, 0xb2, 0x3f, 0x4d, 0xb8, 0x44, 0x14, 0x65, 0x5c, 0xaa,
	0xf2, 0x5c, 0xa6, 0x2a, 0xb8, 0x5c, 0x94, 0xd4, 0xb9, 0x42, 0xd5, 0xe2, 0x4a, 0x51, 0x23, 0xe5,
	0x2a, 0x51, 0x1a, 0x73, 0xb5, 0x2a, 0xe1, 0x1a, 0x51, 0x16, 0x73, 0xad, 0xc8, 0xd5, 0xb9, 0x4e,
	0xd4, 0x4c, 0xb8, 0x5e, 0x94, 0x27, 0xdc, 0x20, 0x2a, 0x33, 0x6e, 0x54, 0x35, 0xb9, 0x49, 0x55,
	0x70, 0xb3, 0xa8, 0x95, 0x72, 0x8b, 0xa8, 0xd3, 0xe2, 0xd6, 0xa0, 0xb2, 0x96, 0x71, 0x9b, 0xa8,
	0x6e, 0xb8, 0x5d, 0x94, 0x55, 0xb8, 0x23, 0xa8, 0x65, 0x12, 0xee, 0x14, 0xb9, 0x82, 0xbb, 0x82,
	0xda, 0xa6, 0xc1, 0xdd, 0xaa, 0x94, 0x7b, 0x54, 0x9e, 0x7b, 0x55, 0x39, 0xf7, 0x89, 0x22, 0xcb,
	0xfd, 0x41, 0x23, 0x26, 0xe5, 0x81, 0xa0, 0x8e, 0x71, 0x3c, 0xa8, 0x6a, 0xf2, 0x90, 0xa8, 0xd9,
	0xe0, 0xe1, 0xa0, 0xae, 0x69, 0xf2, 0x88, 0xa8, 0x92, 0xf2, 0xa8, 0x28, 0xb2, 0x3c, 0x26, 0xaa,
	0xc7, 0x3c, 0x2e, 0xb2, 0x35, 0x9e, 0x10, 0x95, 0x96, 0x27, 0x45, 0x23, 0x23, 0x3c, 0x25, 0xea,
	0x1a, 0x9e, 0xee, 0x9f, 0xb6, 0xa8, 0x6f, 0x80, 0xc5, 0x47, 0x50, 0x72, 0x88, 0x36, 0x67, 0xde,
	0xe0, 0xd8, 0xc0, 0x0a, 0x7f, 0x79, 0xa0, 0x36, 0xb8, 0xf6, 0x3f, 0x38, 0xee, 0xfa, 0x9b, 0x07,
	0x75, 0xab, 0x4e, 0xf9, 0x17, 0x7a, 0xcc, 0x9d, 0xbd, 0xc5, 0xa4, 0x25, 0x2a, 0x03, 0xdd, 0xf1,
	0x8b, 0x2b, 0xd6, 0x5f, 0x3a, 0x9c, 0x10, 0xae, 0xf3, 0x87, 0x00, 0x00, 0x00, 0xff, 0xff, 0x56,
	0xe8, 0xfa, 0x43, 0x47, 0x14, 0x00, 0x00,
}
